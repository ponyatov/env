title = 10.5.3 Automatic Variables
url = https://www.gnu.org/software/make/manual/html_node/Automatic-Variables.html

$@

The file name of the target of the rule. If the target is an archive member, 
then ‘$@’ is the name of the archive file. In a pattern rule that has multiple 
targets (see Introduction to Pattern Rules), ‘$@’ is the name of whichever 
target caused the rule’s recipe to be run.

$<
The name of the first prerequisite. If the target got its recipe from an 
implicit rule, this will be the first prerequisite added by the implicit 
rule (see Implicit Rules).

$?
The names of all the prerequisites that are newer than the target, with 
spaces between them. For prerequisites which are archive members, only the 
named member is used (see Archives).

$^
The names of all the prerequisites, with spaces between them.
A target has only one prerequisite on each other file it depends on, 
no matter how many times each file is listed as a prerequisite. 
So if you list a prerequisite more than once for a target, the value of $^ 
contains just one copy of the name.  

$+
This is like ‘$^’, but prerequisites listed more than once are duplicated in 
the order they were listed in the makefile. This is primarily useful for use 
in linking commands where it is meaningful to repeat library file names in a 
particular order.

$*
The stem with which an implicit rule matches (see How Patterns Match). 
If the target is dir/a.foo.b and the target pattern is a.%.b then the stem 
is dir/foo. The stem is useful for constructing names of related files.

In a static pattern rule, the stem is part of the file name that matched 
the ‘%’ in the target pattern.

In an explicit rule, there is no stem; ‘$*’ is set to the target name minus 
the suffix. For example, if the target name is ‘foo.c’, then ‘$*’ is set to 
‘foo’, since ‘.c’ is a suffix. 
